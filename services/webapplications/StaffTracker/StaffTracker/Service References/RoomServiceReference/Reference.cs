//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StaffTracker.RoomServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Room", Namespace="http://schemas.datacontract.org/2004/07/RoomService")]
    [System.SerializableAttribute()]
    public partial class Room : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoomKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipcodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoomKey {
            get {
                return this.RoomKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.RoomKeyField, value) != true)) {
                    this.RoomKeyField = value;
                    this.RaisePropertyChanged("RoomKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zipcode {
            get {
                return this.ZipcodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipcodeField, value) != true)) {
                    this.ZipcodeField = value;
                    this.RaisePropertyChanged("Zipcode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RoomServiceReference.IRoomService")]
    public interface IRoomService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomService/QueryAllRoomIdentifiers", ReplyAction="http://tempuri.org/IRoomService/QueryAllRoomIdentifiersResponse")]
        string[] QueryAllRoomIdentifiers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomService/QueryRoom", ReplyAction="http://tempuri.org/IRoomService/QueryRoomResponse")]
        StaffTracker.RoomServiceReference.Room QueryRoom(string roomKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomService/InsertRoom", ReplyAction="http://tempuri.org/IRoomService/InsertRoomResponse")]
        void InsertRoom(StaffTracker.RoomServiceReference.Room room);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomService/UpdateRoom", ReplyAction="http://tempuri.org/IRoomService/UpdateRoomResponse")]
        void UpdateRoom(StaffTracker.RoomServiceReference.Room room, string roomKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomService/DeleteRoom", ReplyAction="http://tempuri.org/IRoomService/DeleteRoomResponse")]
        void DeleteRoom(string roomKey);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRoomServiceChannel : StaffTracker.RoomServiceReference.IRoomService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RoomServiceClient : System.ServiceModel.ClientBase<StaffTracker.RoomServiceReference.IRoomService>, StaffTracker.RoomServiceReference.IRoomService {
        
        public RoomServiceClient() {
        }
        
        public RoomServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RoomServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RoomServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RoomServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[] QueryAllRoomIdentifiers() {
            return base.Channel.QueryAllRoomIdentifiers();
        }
        
        public StaffTracker.RoomServiceReference.Room QueryRoom(string roomKey) {
            return base.Channel.QueryRoom(roomKey);
        }
        
        public void InsertRoom(StaffTracker.RoomServiceReference.Room room) {
            base.Channel.InsertRoom(room);
        }
        
        public void UpdateRoom(StaffTracker.RoomServiceReference.Room room, string roomKey) {
            base.Channel.UpdateRoom(room, roomKey);
        }
        
        public void DeleteRoom(string roomKey) {
            base.Channel.DeleteRoom(roomKey);
        }
    }
}
