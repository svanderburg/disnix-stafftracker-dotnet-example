//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StaffTracker.StaffServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Staff", Namespace="http://schemas.datacontract.org/2004/07/StaffService")]
    [System.SerializableAttribute()]
    public partial class Staff : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IpAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoomField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IpAddress {
            get {
                return this.IpAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.IpAddressField, value) != true)) {
                    this.IpAddressField = value;
                    this.RaisePropertyChanged("IpAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Room {
            get {
                return this.RoomField;
            }
            set {
                if ((object.ReferenceEquals(this.RoomField, value) != true)) {
                    this.RoomField = value;
                    this.RaisePropertyChanged("Room");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="StaffServiceReference.IStaffService")]
    public interface IStaffService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStaffService/QueryAllStaff", ReplyAction="http://tempuri.org/IStaffService/QueryAllStaffResponse")]
        StaffTracker.StaffServiceReference.Staff[] QueryAllStaff();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStaffService/QueryStaff", ReplyAction="http://tempuri.org/IStaffService/QueryStaffResponse")]
        StaffTracker.StaffServiceReference.Staff QueryStaff(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStaffService/InsertStaff", ReplyAction="http://tempuri.org/IStaffService/InsertStaffResponse")]
        void InsertStaff(StaffTracker.StaffServiceReference.Staff staff);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStaffService/UpdateStaff", ReplyAction="http://tempuri.org/IStaffService/UpdateStaffResponse")]
        void UpdateStaff(int id, StaffTracker.StaffServiceReference.Staff staff);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStaffService/DeleteStaff", ReplyAction="http://tempuri.org/IStaffService/DeleteStaffResponse")]
        void DeleteStaff(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStaffServiceChannel : StaffTracker.StaffServiceReference.IStaffService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StaffServiceClient : System.ServiceModel.ClientBase<StaffTracker.StaffServiceReference.IStaffService>, StaffTracker.StaffServiceReference.IStaffService {
        
        public StaffServiceClient() {
        }
        
        public StaffServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StaffServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StaffServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StaffServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public StaffTracker.StaffServiceReference.Staff[] QueryAllStaff() {
            return base.Channel.QueryAllStaff();
        }
        
        public StaffTracker.StaffServiceReference.Staff QueryStaff(int id) {
            return base.Channel.QueryStaff(id);
        }
        
        public void InsertStaff(StaffTracker.StaffServiceReference.Staff staff) {
            base.Channel.InsertStaff(staff);
        }
        
        public void UpdateStaff(int id, StaffTracker.StaffServiceReference.Staff staff) {
            base.Channel.UpdateStaff(id, staff);
        }
        
        public void DeleteStaff(int id) {
            base.Channel.DeleteStaff(id);
        }
    }
}
